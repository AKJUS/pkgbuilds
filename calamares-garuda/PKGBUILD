# Maintainer: TNE <TNE[at]garudalinux[dot]org>
# Maintainer: dr460nf1r3 <dr460nf1r3 at garudalinux dot org>
# Contributor: librewish <librewish@gmail.com>
# Contributor: Philip MÃ¼ller <philm[at]manjaro[dog]org>

pkgname=calamares-garuda
pkgver=3.4.0.r6.g78d4208a0
_commit=78d4208a03b0abdfb68e94c9c08a28f37a473ee6
pkgrel=5
pkgdesc='Distribution-independent installer framework'
arch=('i686' 'x86_64')
license=(GPL)
url="https://https://calamares.codeberg.page"
license=('LGPL')
conflicts=('calamares' 'calamares-dev')
provides=('calamares' 'calamares-dev')
replaces=('calamares-dev')
depends=('kconfig' 'kcoreaddons' 'kiconthemes' 'ki18n' 'solid' 'yaml-cpp' 'kpmcore'
  'boost-libs' 'ckbcomp' 'hwinfo' 'qt6-svg' 'polkit-qt6'
  'squashfs-tools' 'libpwquality' 'python' 'python-distutils-extra')
makedepends=('extra-cmake-modules' 'qt6-tools' 'qt6-translations' 'git' 'boost')

source+=(git+https://codeberg.org/Calamares/calamares.git#commit="${_commit}"
  0001-welcome-Add-efi-check.patch
  0001-bootloader-Correct-a-logic-error-preventing-installa.patch
  garuda-specific-patches.patch)
sha256sums=('03a3f78232308d7522a8391b77c996d64a36278a8c06750bc25aa26d2ea64f67'
            'f0d818c865bccd7af4b3ffa9451f84c7d95afb27e3f58d478941990cbf7daa1a'
            'b019ab30907724f4f56ec56d41bd22794a88081fc0f1608d8cd65c4929a9c1e6'
            '4e74007a55d122c99e05887c1996adf3450fbeb471ce1c85d81f7aabfd09eefe')

pkgver() {
  cd "$srcdir/calamares" || exit

  _regex='^set\(CALAMARES_VERSION ([0-9]+\.[0-9]+\.[0-9]+([^0-9].*)?)\)\s*$'
  _file='CMakeLists.txt'

  _line=$(
    grep -E "$_regex" "$_file" \
      | head -1
  )
  _version=$(
    printf '%s' "$_line" | sed -E "s@$_regex@\1@;s@alpha@a@;s@beta@b@;s@-@.@"
  )
  _line=$(
    printf '%s' "$_line" \
      | sed -E 's@\(@\\(@;s@\)@\\)@'
  )
  _commit=$(
    git log -G "$_line" -1 --pretty=oneline --no-color | sed 's@\ .*$@@'
  )
  _revision=$(
    git rev-list --count "$_commit"..HEAD
  )
  _hash=$(
    git rev-parse --short HEAD
  )

  printf '%s.r%s.g%s' \
    "$_version" \
    "$_revision" \
    "$_hash"
}

prepare() {
  cd "${srcdir}/calamares" || exit

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    src="${src%.zst}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd "${srcdir}/calamares" || exit

  mkdir -p build && cd build || exit
  cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LIBDIR=lib \
    -DBoost_NO_BOOST_CMAKE=ON \
    -DWITH_QT6=ON \
    -DWITH_APPSTREAM=OFF \
    -DBUILD_TESTING=OFF \
    -DSKIP_MODULES="webview interactiveterminal initramfs \
                              initramfscfg packagechooser packagechooserq \
                              dummyprocess dummypython dummycpp \
                              dummypythonqt services-openrc"
  make
}

package() {
  cd "${srcdir}/calamares/build" || exit
  make DESTDIR="$pkgdir" install
}
