---
workflow:
  rules:
    - if: $BUMPVER == "1"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

stages: [check, check-pr, bumpver, deploy]

variables:
  BUILD_HOST: builds.garudalinux.org
  BUILD_PORT: 223
  BUILD_USER: gitlab
  GIT_AUTHOR_EMAIL: ci@garudalinux.org
  GIT_AUTHOR_NAME: GitLab CI
  GIT_STRATEGY: clone
  REPO_URL: $CI_SERVER_PROTOCOL://gitlab-ci-token:$ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git

check:
  stage: check
  image: alpine:latest
  script:
    - apk add --no-cache --upgrade bash shellcheck shfmt
    - bash .ci/lint.sh || true # to be replaced with a warning/failure once issues are fixed
  rules:
    - if: $BUMPVER != "1"

check-pr:
  stage: check-pr
  image: alpine:latest
  script:
    - apk add --no-cache --upgrade py3-pip
    - pip install -U commitizen
    - cz check --message "$CI_COMMIT_MESSAGE" >/tmp/cz_check || true # why does it return 1 if its actually 0?
    - grep "successful" /tmp/cz_check # ugly hack to workaround the above issue
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $BUMPVER != "1"

bumpver:
  stage: bumpver
  image: archlinux:latest
  script:
    - pacman -Syu --noconfirm curl git jq pacman-contrib
    - git config --global user.name "$GIT_AUTHOR_NAME"
    - git config --global user.email "$GIT_AUTHOR_EMAIL"
    - bash .ci/version-bump.sh
  rules:
    - if: $BUMPVER == "1"

deploy:
  stage: deploy
  image: alpine:latest
  script:
    - | # Initialize deployment
      [[ -z "${DEPLOY_KEY+x}" ]] && echo "No deploy key available, backing off!" && exit 1
      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      echo "$DEPLOY_KEY" >>~/.ssh/id_ed25519
      chmod 400 ~/.ssh/id_ed25519
      apk add --no-cache --upgrade bash openssh
    - | # Determine what to deploy
      bash .ci/what-to-deploy.sh
    - | # Trigger deployment
      TO_DEPLOY=$(cat /tmp/TO_DEPLOY)
      ssh -p "$BUILD_PORT" -o StrictHostKeyChecking=no "$BUILD_USER"@"$BUILD_HOST" "chaotictrigger $TO_DEPLOY"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_MESSAGE =~ /\[deploy.*\]/ && $BUMPVER != "1"
