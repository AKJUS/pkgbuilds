---
stages: [check, deploy]
variables:
  BUILD_HOST: builds.garudalinux.org
  BUILD_PORT: 223
  BUILD_USER: gitlab
  GIT_STRATEGY: clone
  SHELLCHECK_OPTS: "-e SC2034 -e SC2148"
check:
  stage: check
  image: nixpkgs/nix-flakes:latest
  script:
    - nix flake update # fix me: source not found if not run
    - nix flake check -L || true # this can be removed once issues are fixed
  rules:
    - if: $CI_COMMIT_BRANCH == "testing"
      when: always
deploy:
  stage: deploy
  image: alpine:latest
  script:
    - | # Initialize deployment
      [[ -z "${DEPLOY_KEY+x}" ]] && echo "No deploy key available, backing off!" && exit 1
      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      echo "$DEPLOY_KEY" >>~/.ssh/id_ed25519
      chmod 400 ~/.ssh/id_ed25519
      apk add --no-cache --upgrade openssh bash
    - | # Determine what to deploy
      bash .ci/what-to-deploy.sh
    - | # Trigger deployment
      ssh -p "$BUILD_PORT" -o StrictHostKeyChecking=no "$BUILD_USER"@"$BUILD_HOST" "chaotictrigger $TO_DEPLOY"
  rules:
    - if: $CI_COMMIT_BRANCH == "testing" && $CI_COMMIT_MESSAGE =~ /[deploy*]/
