# Maintainer: TNE <TNE[at]garudalinux[dot]org>

pkgname=calamares-git
pkgver=3.3.0.r38.g1d8a19724
pkgrel=1
pkgdesc='Distribution-independent installer framework (development version)'
arch=('i686' 'x86_64')
license=(GPL)
url="https://github.com/calamares/calamares"
license=('LGPL')
conflicts=('calamares' 'calamares-dev')
provides=('calamares' 'calamares-dev')
replaces=('calamares-dev')
depends=('kconfig5' 'kcoreaddons5' 'kiconthemes5' 'ki18n5' 'kio5' 'solid5' 'yaml-cpp' 'kpmcore'
	'boost-libs' 'ckbcomp' 'hwinfo' 'qt5-svg' 'polkit-qt5' 'gtk-update-icon-cache' 'plasma-framework5'
	'qt5-xmlpatterns' 'squashfs-tools' 'libpwquality' 'appstream-qt5' 'python')
makedepends=('extra-cmake-modules' 'qt5-tools' 'qt5-translations' 'git' 'boost')
# backup=('usr/share/calamares/modules/bootloader.conf'
#         'usr/share/calamares/modules/displaymanager.conf'
#         'usr/share/calamares/modules/initcpio.conf'
#         'usr/share/calamares/modules/unpackfs.conf')

source+=(git+https://github.com/calamares/calamares.git#commit=1d8a1972422d83c36f2b934c2629ae1f564c0428
	garuda-fswhitelist.patch
	0001-Apply-garuda-specific-patches.patch
	partition.conf
	mount.conf
	mhwdcfg.conf
	chrootcfg.conf)
sha256sums=('SKIP'
            'ac4c7e5e7a3d2aeb62462bbee17f3abeaf4d25560285da4b1b1804562f1d159f'
            'd681b09c9f6daf22efb08cbcaad577487b4c749205697bf61b96d053ab50db7c'
            '13fefb868e4ad69a1a3cf75fb8e63d075e029b2b9b622b01689571c585bfb244'
            'd0f3cd62124b72752cba288a6aff6730a4b476bfdc02a258479f17af7c43a9d6'
            'd3d0952c6cd7684da42328fb0a4c1315d0419ea7c335988757731da8d4227e9a'
            'f2d2796ca54f2c10cff7622804d9f59a2c3c2a66b23633505a5977d60d25be81')

pkgver() {
	cd "$srcdir/calamares" || exit

	_regex='^set\(CALAMARES_VERSION ([0-9]+\.[0-9]+\.[0-9]+([^0-9].*)?)\)\s*$'
	_file='CMakeLists.txt'

	_line=$(
		grep -E "$_regex" "$_file" |
			head -1
	)
	_version=$(
		printf '%s' "$_line" | sed -E "s@$_regex@\1@;s@alpha@a@;s@beta@b@;s@-@.@"
	)
	_line=$(
		printf '%s' "$_line" |
			sed -E 's@\(@\\(@;s@\)@\\)@'
	)
	_commit=$(
		git log -G "$_line" -1 --pretty=oneline --no-color | sed 's@\ .*$@@'
	)
	_revision=$(
		git rev-list --count "$_commit"..HEAD
	)
	_hash=$(
		git rev-parse --short HEAD
	)

	printf '%s.r%s.g%s' \
		"$_version" \
		"$_revision" \
		"$_hash"
}

prepare() {
	cd "${srcdir}/calamares" || exit

	# patches here
	patch -p1 -N -i "$srcdir/garuda-fswhitelist.patch"
	patch -p1 -N -i "$srcdir/0001-Apply-garuda-specific-patches.patch"
}

build() {
	cd "${srcdir}/calamares" || exit

	mkdir -p build && cd build || exit
	cmake .. \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_INSTALL_LIBDIR=lib \
		-DWITH_PYTHONQT:BOOL=ON \
		-DBoost_NO_BOOST_CMAKE=ON \
		-DSKIP_MODULES="webview interactiveterminal initramfs \
                              initramfscfg packagechooser packagechooserq \
                              dummyprocess dummypython dummycpp \
                              dummypythonqt services-openrc"
	make
}

package() {
	cd "${srcdir}" || exit
	install -Dm755 partition.conf "$pkgdir"/etc/calamares/modules/partition.conf
	install -Dm755 mount.conf "$pkgdir"/etc/calamares/modules/mount.conf
	install -Dm755 chrootcfg.conf "$pkgdir"/etc/calamares/modules/chrootcfg.conf

	cd "${srcdir}/calamares/build" || exit
	make DESTDIR="$pkgdir" install
}
